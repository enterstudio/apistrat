{
  "apiVersion": "1.0.0",
  "swaggerVersion": "1.2",
  "basePath": "http://localhost:8002/api",
  "resourcePath": "/events",
  "apis": [
    {
      "path": "/events",
      "operations": [
        {
          "method": "POST",
          "summary": "adds a new event",
          "type": "Event",
          "nickname": "addEvent",
          "parameters": [
            {
              "name": "body",
              "description": "event to add",
              "required": true,
              "type": "Event",
              "paramType": "body"
            }
          ]
        }
      ]
    },
    {
      "path": "/events/{eventId}",
      "operations": [
        {
          "method": "GET",
          "summary": "looks up an event by ID",
          "type": "Event",
          "nickname": "findEventById",
          "parameters": [
            {
              "name": "eventId",
              "description": "ID of event to look up",
              "required": true,
              "type": "integer",
              "format": "int64",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "Event not found"
            }
          ]
        },
        {
          "method": "DELETE",
          "summary": "Removes an event",
          "type": "Event",
          "nickname": "deleteEvent",
          "parameters": [
            {
              "name": "eventId",
              "description": "ID of event to look delete",
              "required": true,
              "type": "integer",
              "format": "int64",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "Event not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/events/{eventId}/status",
      "operations": [
        {
          "method": "GET",
          "summary": "gets the attendee status of the event",
          "type": "EventStatus",
          "nickname": "getEventStatus",
          "parameters": [
            {
              "name": "eventId",
              "description": "ID of event to get status on",
              "required": true,
              "type": "integer",
              "format": "int64",
              "paramType": "path"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "EventStatus" : {
      "id": "EventStatus",
      "properties": {
        "yesCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of people confirmed to attend"
        },
        "maybeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of people who may attend"
        },
        "noCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of people who cannot attend"
        },
        "invitedCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of people invited"
        }
      }
    },
    "Event": {
      "id": "Event",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Unique identifier for the event"
        },
        "name": {
          "type": "string",
          "description": "Friendly name for the event"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date & Time that the event begins"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date & Time that the event begins"
        },
        "maxAttendees": {
          "type": "integer",
          "format": "int32",
          "description": "number of people who can attend"
        }
      }
    }
  }
}